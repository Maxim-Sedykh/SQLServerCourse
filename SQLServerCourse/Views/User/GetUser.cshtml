@model SQLServerCourse.Domain.ViewModels.User.UserEditingViewModel

<div class="container">
    <form id="userDataForm" method="post">
        <div class="row p-3 border border-bottom border-white br-40 pb-4">
            <div class="col-md-12">
                <div class="form-group">
                    <label asp-for="@Model.Id" class="col-form-label text-white"></label>
                    <input asp-for="@Model.Id" type="number" class="form-control br-40" readonly>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Login" class="col-form-label text-white"></label>
                    <input asp-for="@Model.Login" type="text" class="form-control br-40">
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Role" class="col-form-label text-white"></label><br />
                    <select asp-for="@Model.Role" class="form-select rounded-3"  style="width:100%; height:38px;">
                    @foreach (var role in Model.UserRoles)
                    {
                        string selectedOption = "";
                        if (role.Key == (int)Model.Role)
                        {
                            selectedOption = "selected";
                        }
                        <!option value="@role.Key" @selectedOption>
                            @role.Value
                        </!option>
                    }
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Name" class="col-form-label text-white pb-2 pt-0"></label>
                    <input asp-for="@Model.Name" type="text" class="form-control br-40">
                </div>
                <div class="form-group mb-3">
                    <label asp-for="@Model.Surname" class="col-form-label text-white"></label>
                    <input asp-for="@Model.Surname" type="text" class="form-control br-40">
                </div>
                <div class="form-group">
                    <label asp-for="@Model.IsEditAble" class="col-form-label text-white"></label><br />
                    <input asp-for="@Model.IsEditAble" id="isEditAbleTrueId" type="radio" class="form-check-input" value="true"><label class="col-form-label text-white ms-2 pt-0"> Да</label><br />
                    <input asp-for="@Model.IsEditAble" id="isEditAbleFalseId" type="radio" class="form-check-input" value=""><label class="col-form-label text-white ms-2 pt-0"> Нет</label>
                </div>
            </div>
        </div>
        <div class="float-end mt-3 w-50">
            <button class="btn br-40 float-end bd-blue-400" id="updateUserData">Обновить информацию</button>
        </div>
    </form>
</div>

<script>
    var IsEditAble = @Html.Raw(Json.Serialize(Model.IsEditAble));
    if (IsEditAble) {
        document.getElementById("isEditAbleTrueId").checked = true;
    }
    else{
        document.getElementById("isEditAbleFalseId").checked = true;
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script>
    $(document).ready(function () {
        $('#userRoleId').select2({
            dropdownParent: $('#wideModalWindow'),
            placeholder: 'Выберите роль',
</script>
<script>
    document.getElementById("updateUserData").addEventListener("click", async (event) => {
        event.preventDefault();
        debugger;

        var value = document.querySelector('input[name="IsEditAble"]:checked').value;
        var isEditable = Boolean(value);
        var updateFormData = {
            Id: parseInt(document.getElementById("Id").value),
            Login: document.getElementById("Login").value,
            Role: document.getElementById("Role").value,
            Name: document.getElementById("Name").value,
            Surname: document.getElementById("Surname").value,
            IsEditAble: isEditable,
        };
        var jsonUpdateFormData = JSON.stringify(updateFormData);

        const response = await fetch('/User/UpdateInfo', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: jsonUpdateFormData
        });

        const responseBody = await response.json();
        Swal.fire({
            title: 'Уведомление!',
            text: responseBody.description,
            icon: response.ok ? 'success' : 'error',
            confirmButtonText: 'Окей',
            background: '#333',
            color: 'white',
        });
    });
</script>



