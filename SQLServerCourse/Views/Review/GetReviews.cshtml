@using SQLServerCourse.Domain.ViewModels.Review;

@model List<ReviewViewModel>

@{
    ViewData["Title"] = "Отзывы | SQLCourse";
}

<div class="container px-0">
    <div class="row w-100 m-0">
        <div class="col-md-12 col-sm-12 page-title-container text-center px-1 text-white mt-3 mx-auto lh-lg fs-5 pt-3">
            <p>
                Ниже находятся отзывы учеников, прошедших весь курс. <br />Оставьте свой отзыв после прохождения
                полного курса MS SQL и T-SQL<br />
            </p>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-12 col-sm-12 text-center">
            @if (User.Identity.IsAuthenticated)
            {
                <button type="button" align="center" class="btn btn-gradient btn-create-review mt-4 text-white"
                        onclick="openModal({ url: '/Review/CreateReview', modalId: 'wideModalWindow'})" data-toggle="ajax-modal" data-target="Modal">
                    Создать отзыв
                </button>
            }
            else
            {
                <a id="anothercourse" class="btn btn-create-review"
                asp-controller="Account" asp-action="Login">
                    Войдите чтобы оставить отзыв
                </a>
            }
        </div>
    </div>
    <div class="row sort-div my-5 fs-6">
        <div class="col-md-5 col-sm-12 d-flex justify-content-between border-bottom px-5">
            <p>
                Сортировать по:
            </p>
            <button class="btn btn-sort" onclick="sortByNewest()">Сначала новые</button>
            @if (User.Identity.IsAuthenticated)
            {
                <button class="btn btn-sort" onclick="sortByOwn()">Сначала свои</button>
            }
        </div>
        <div class="col-md-7 col-sm-12" style="padding-left:25%;">
        </div>
    </div>
    <div id="review-list">
        @for (int i = 0; i < Model.Count; i++)
        {
            <div class="row review mb-5 mx-auto p-2">
                <div class="col-md-2">
                    <p class="review-user-name text-center fs-5 fw-bolder mb-1">
                        @Model[i].Login
                    </p>
                    <p class="review-date text-center fs-6 mb-2">
                        @Model[i].ReviewDateTime.ToString("yyyy-MM-dd HH:mm:ss")
                    </p>
                    <a class="btn d-block br-40 bd-blue-800 mt-3" asp-controller="UserProfile" asp-action="GetUserProfile" asp-route-userLogin="@Model[i].Login">Профиль</a>
                </div>
                <div class="col-md-8 my-auto">
                    <div class="review-text-container px-3 pt-2 my-1">
                        <p class="text-white fs-6">@Model[i].Text</p>
                    </div>
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <div class="col-md-2 d-flex justify-content-center">
                        <form asp-controller="Review" asp-action="DeleteReview" asp-route-id="@Model[i].Id" method="post">
                            <button type="submit" class="btn btn-gradient text-white mt-2">Удалить</button>
                        </form>
                    </div>
                }
            </div>
        }
    </div>
</div>

<script>
    var priorityKey = @Json.Serialize(User.Identity.Name);
    var reviews = document.querySelectorAll(".review");
    var reviewContainer = document.getElementById("review-list");

    function compareByDate(a, b) {
        var dateA = new Date(a.getElementsByClassName("review-date")[0].textContent);
        var dateB = new Date(b.getElementsByClassName("review-date")[0].textContent);

        return dateB - dateA;
    }

    function compareByUserName(a, b) {
        var userNameA = a.getElementsByClassName("review-user-name")[0].innerText ||
            a.getElementsByClassName("review-user-name")[0].textContent;
        var userNameB = b.getElementsByClassName("review-user-name")[0].innerText ||
            a.getElementsByClassName("review-user-name")[0].textContent;

        if ((userNameA == priorityKey) && (userNameB != priorityKey)) {
            return -1;
        } else if ((userNameA != priorityKey) && (userNameB == priorityKey)) {
            return 1;
        } else {
            return 0;
        }
    }


    function sortByOwn() {
        let sortedReviews = Array.from(reviews).sort(compareByUserName);

        for (let i = 0; i < sortedReviews.length; i++) {
            reviewContainer.appendChild(sortedReviews[i]);
        }
    }

    function sortByNewest() {
        let sortedReviews = Array.from(reviews).sort(compareByDate);

        for (let i = 0; i < sortedReviews.length; i++) {
            reviewContainer.appendChild(sortedReviews[i]);
        }
    }
</script>