@using SQLServerCourse.Domain.ViewModels.Review;

@model IEnumerable<ReviewViewModel>
@{
    ViewData["Title"] = "Отзывы | SQLCourse";
}

<div class="container-fluid">
    <div class="container px-0">
        <div class="review-container">
            <div class="row w-100 m-0">
                <div class="col-md-12 col-sm-12 review-container-text text-center px-1 text-white mt-3">
                    Ниже находятся отзывы учеников, прошедших весь курс. <br />Оставьте свой отзыв после прохождения
                    полного курса MS SQL и T-SQL<br />
                </div>
            </div>
            <div class="row m-0">
                <div class="col-md-12 col-sm-12 text-center">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <button type="button" align="center" class="btn btn-gradient btn-createreview mt-4 text-white"
                                onclick="openModal({ url: '/Review/CreateReview', modalId: 'wideModalWindow'})" data-toggle="ajax-modal" data-target="Modal">
                            Создать отзыв
                        </button>
                    }
                    else
                    {
                        <a id="anothercourse" class="btn btn-createreview"
                        asp-controller="Account" asp-action="Login">
                            Войдите чтобы оставить отзыв
                        </a>
                    }
                </div>
            </div>
            <div class="sort-div border-bottom">
                <p style="font-size:20px;">Сортировать: <button class="btn btn-sort border-bottom" onclick="sortByNewest()">Сначала новые</button> 
                    @if (User.Identity.IsAuthenticated)
                    {
                        <button class="btn btn-sort" onclick="sortByOwn()">Сначала свои</button>
                    }
                </p>
            </div>
            <div id="review-list">
                @foreach (var review in Model)
                {
                    <div class="review">
                        <table align="center" class="table-review my-4" bordercolor="grey">
                            <tr class="tr">

                                <th class="th-rev-log px-3">
                                    <text class="review-user-name">@review.UsersLogin</text> <br /> 
                                    <text class="review-date" style="font-weight:500;">@review.ReviewDateTime.ToString("yyyy-MM-dd HH:mm:ss")</text>
                                </th>
                                <th class="th-rev-text">
                                    <div class="review-container-rev-text wordwrap">
                                        @review.ReviewText
                                    </div>
                                </th>
                            <tr>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    var priorityKey = @Json.Serialize(User.Identity.Name);
    var reviews = document.getElementsByClassName("review");
    var reviewContainer = document.getElementById("review-list");

    function compareByDate(a, b) {
        var dateA = new Date(a.getElementsByClassName("review-date")[0].textContent);
        var dateB = new Date(b.getElementsByClassName("review-date")[0].textContent);

        return dateB - dateA;
    }

    function compareByUserName(a, b) {
        var userNameA = a.getElementsByClassName("review-user-name")[0].innerText ||
            a.getElementsByClassName("review-user-name")[0].textContent;
        var userNameB = b.getElementsByClassName("review-user-name")[0].innerText ||
            a.getElementsByClassName("review-user-name")[0].textContent;

        if ((userNameA == priorityKey) && (userNameB != priorityKey)) {
            return -1;
        } else if ((userNameA != priorityKey) && (userNameB == priorityKey)) {
            return 1;
        } else {
            return 0;
        }
    }


    function sortByOwn() {
        let sortedReviews = Array.from(reviews).sort(compareByUserName);

        for (let i = 0; i < sortedReviews.length; i++) {
            reviewContainer.appendChild(sortedReviews[i]);
        }
    }

    function sortByNewest() {
        let sortedReviews = Array.from(reviews).sort(compareByDate);

        for (let i = 0; i < sortedReviews.length; i++) {
            reviewContainer.appendChild(sortedReviews[i]);
        }
    }

</script>

<script>
    document.getElementById("textarea-review")
        .addEventListener("keyup", function (event) {
            event.preventDefault();
            if (event.keyCode === 13) {
                document.getElementById("button-review").click();
            }
        });
</script>

